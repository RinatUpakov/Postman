{
	"info": {
		"_postman_id": "7a71d54d-a54b-4a74-a1d9-b7564202c4b7",
		"name": "QA_group28_2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Логинимся, получаем токен авторизации, записываем его в окружение\r",
							"\r",
							"pm.environment.set(\"auth_token\", pm.response.json().token);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "login",
							"value": "Rinat",
							"type": "text"
						},
						{
							"key": "password",
							"value": "anypassword",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/login",
					"host": [
						"{{url}}"
					],
					"path": [
						"login"
					],
					"query": [
						{
							"key": "",
							"value": null,
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "User_info",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Проверка на статус код 200\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// Проверяем структуру JSON в ответе\r",
							"\r",
							"let resData = pm.response.json(),\r",
							"    schema = {\r",
							"  \"type\": \"object\",\r",
							"  \"properties\": {\r",
							"    \"person\": {\r",
							"      \"type\": \"object\",\r",
							"      \"properties\": {\r",
							"          \"u_age\": {\r",
							"              \"type\": \"integer\"\r",
							"          },\r",
							"          \"u_name\": {\r",
							"              \"type\": \"array\",\r",
							"              \"items\": {}\r",
							"          },\r",
							"          \"u_salary_1_5_year\": {\r",
							"              \"type\": \"integer\"\r",
							"          }\r",
							"      },\r",
							"    },\r",
							"      \"qa_salary_after_12_month\": {\r",
							"          \"type\": \"number\"\r",
							"      },\r",
							"      \"qa_salary_after_6_month\": {\r",
							"          \"type\": \"integer\"\r",
							"      },\r",
							"      \"qa_start_salary\": {\r",
							"          \"type\": \"integer\"\r",
							"      }\r",
							"    }\r",
							"    };\r",
							"\r",
							"pm.test('Schema is valid', function () {\r",
							"    pm.expect(tv4.validate(resData, schema)).to.be.true;\r",
							"});\r",
							"\r",
							"// Достать значение из поля 'u_salary_1.5_year' и передать в поле salary в окружение\r",
							"\r",
							"pm.environment.set(\"salary\", resData.person.u_salary_1_5_year);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"age\": 29,\r\n    \"salary\": 800,\r\n    \"name\": \"Rinat\",\r\n    \"auth_token\": \"{{auth_token}}\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/user_info",
					"host": [
						"{{url}}"
					],
					"path": [
						"user_info"
					]
				}
			},
			"response": []
		},
		{
			"name": "New Data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Проверка на статус код 200\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// Проверка структуры JSON файла\r",
							"\r",
							"let resData = pm.response.json(),\r",
							"    schema = {\r",
							"        \"type\": \"object\",\r",
							"        \"properties\":{\r",
							"            \"age\": {\r",
							"                \"type\": \"integer\"\r",
							"            },\r",
							"            \"name\": {\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"salary\": {\r",
							"                \"type\": \"array\",\r",
							"                \"items\": {}\r",
							"            }\r",
							"        }\r",
							"    };\r",
							"\r",
							"    pm.test('Schema is valid', function () {\r",
							"    pm.expect(tv4.validate(resData, schema)).to.be.true;\r",
							"});\r",
							"\r",
							"// В ответе указаны коэффициенты умножения salary, напишите тесты по проверке правильности результата перемножения на коэффициент.\r",
							"\r",
							"pm.test(\"Salary mulltiplier check\", function () {\r",
							"    pm.expect(+resData.salary[1]).to.eql(resData.salary[0]*2);\r",
							"    pm.expect(+resData.salary[2]).to.eql(resData.salary[0]*3);\r",
							"});\r",
							"\r",
							"// проверить, что 2-й элемент массива salary больше 1-го и 0-го\r",
							"\r",
							"pm.test(\"Salary comparing\", function () {\r",
							"    pm.expect(+resData.salary[2]).to.above(resData.salary[0]);\r",
							"    pm.expect(+resData.salary[2]).to.above(+resData.salary[1]);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "31",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "800",
							"type": "text"
						},
						{
							"key": "name",
							"value": "Anton",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "{{auth_token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/new_data",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"new_data"
					]
				}
			},
			"response": []
		},
		{
			"name": "Test pet info",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Проверка на статус код 200\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// Проверяем структуру JSON в ответе\r",
							"\r",
							"let resData = pm.response.json(),\r",
							"    schema = {\r",
							"        \"type\": \"object\",\r",
							"        \"properties\": {\r",
							"            \"age\": {\r",
							"                \"type\": \"integer\"\r",
							"            },\r",
							"            \"daily_food\": {\r",
							"                \"type\": \"number\"\r",
							"            },\r",
							"            \"daily_sleep\": {\r",
							"                \"type\": \"number\"\r",
							"            },\r",
							"            \"name\": {\r",
							"                \"type\": \"string\"\r",
							"            }\r",
							"        }\r",
							"    };\r",
							"\r",
							"pm.test('Schema is valid', function () {\r",
							"    pm.expect(tv4.validate(resData, schema)).to.be.true;\r",
							"});\r",
							"\r",
							"// В ответе указаны коэффициенты умножения weight, напишите тесты по проверке правильности результата перемножения на коэффициент.\r",
							"\r",
							"let reqData = request.data;\r",
							"\r",
							"pm.test(\"Coefficients is correct\", function () {\r",
							"    pm.expect(+resData.daily_food).to.eql(reqData.weight*0.012);\r",
							"    pm.expect(+resData.daily_sleep).to.eql(reqData.weight*2.5);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "4",
							"type": "text"
						},
						{
							"key": "weight",
							"value": "3",
							"type": "text"
						},
						{
							"key": "name",
							"value": "Leo",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "{{auth_token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/test_pet_info",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"test_pet_info"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get test user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Проверка на статус код 200\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// Проверка структуры JSON в ответе\r",
							"\r",
							"let resData = pm.response.json(),\r",
							"    schema = {\r",
							"        \"type\": \"object\",\r",
							"        \"properties\": {\r",
							"            \"age\": {\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"family\": {\r",
							"                \"type\": \"object\",\r",
							"                \"properties\": {\r",
							"                    \"children\": {\r",
							"                        \"type\": \"array\",\r",
							"                        \"items\": {\r",
							"                            \"type\": \"array\"\r",
							"                        }\r",
							"                    },\r",
							"                    \"u_salary_1_5_year\": {\r",
							"                        \"type\": \"integer\"\r",
							"                    }\r",
							"                }\r",
							"            },\r",
							"            \"name\": {\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"salary\": {\r",
							"                \"type\": \"integer\"\r",
							"            }\r",
							"        }\r",
							"    };\r",
							"\r",
							"    pm.test(\"Schema is valid\", function () {\r",
							"        pm.expect(tv4.validate(resData, schema)).to.be.true;\r",
							"    });\r",
							"\r",
							"// Проверить что занчение поля name = значению переменной name из окружения\r",
							"\r",
							"pm.test(\"Name is correct\", function () {\r",
							"    pm.expect(resData.name).to.eql(pm.environment.get(\"name\"));\r",
							"    });\r",
							"    \r",
							"// Проверить что занчение поля age в ответе соответсвует отправленному в запросе значению поля age\r",
							"\r",
							"let reqData = request.data;\r",
							"\r",
							"pm.test(\"Age is correct\", function () {\r",
							"    pm.expect(reqData.age).to.eql(resData.age);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "32",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{salary}}",
							"type": "text"
						},
						{
							"key": "name",
							"value": "Alex",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "{{auth_token}}",
							"type": "text"
						}
					],
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://162.55.220.72:5005/get_test_user?age=32&salary=700&name=Alex&auth_token={{auth_token}}",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"get_test_user"
					],
					"query": [
						{
							"key": "age",
							"value": "32"
						},
						{
							"key": "salary",
							"value": "700"
						},
						{
							"key": "name",
							"value": "Alex"
						},
						{
							"key": "auth_token",
							"value": "{{auth_token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Currency",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "auth_token",
							"value": "{{auth_token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/currency",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"currency"
					]
				}
			},
			"response": []
		},
		{
			"name": "Curr_Byn",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/curr_byn?auth_token={{auth_token}}&curr_code=45",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"curr_byn"
					],
					"query": [
						{
							"key": "auth_token",
							"value": "{{auth_token}}"
						},
						{
							"key": "curr_code",
							"value": "45"
						}
					]
				}
			},
			"response": []
		}
	]
}